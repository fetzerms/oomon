# ===========================================================================
# OOMon - Objected Oriented Monitor Bot
# Copyright (C) 2004  Timothy L. Jensen
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# ===========================================================================

# Example OOMon config file
# $Id$

# Confused? Visit the following URL:
#
#    http://oomon.sourceforge.net/oomon_cf.html

# Bot parameters
#:Nick:username:vhost:realname:opernick:operpass:
B:OOMon:::Object Oriented Monitor Bot:oomon:Cabbages:

# Server info and channel(s)
#:hostname:port:password:channel(s):
S:plasma.toast.pc:6667::#monitors:

# Include other config files here
I:userlist.cf
I:remotes.cf
I:scanner.cf

# DCC Listen port number.  Default is 0, which means let the OS pick a
# port number for us.
#D:0:

# ====================================================================
# Exempt - This defines userhost and class patterns that may be
#          excluded from being killed, klined, etc.  Note that in
#          some instances a user's class name can't be checked!
#
#          It is possible to exempt users from certain types of abuse
#          using the optional <flags> field (see Syntax).  If the
#          <flags> field is omitted, matching users will be exempt
#          from ALL types of abuse.
#
# Syntax
#  E:<userhost pattern>
#  E:<flags>:<userhost pattern>
#  EC:<class pattern>
#  EC:<flags>:<class pattern>
#
# flags            - One or more of the following, separated by spaces
#                    and/or commas:
#                      CLONE    - Don't kill/kline/etc. for clones.
#                      FLOOD    - Don't kill/kline/etc. for flooding.
#                      SPOOF    - Don't kill/kline/etc. for spoofs.
#                      JUPE     - Don't kill/kline/etc. for joining
#                                 juped channels.
#                      SEEDRAND - Don't kill/kline/etc. for having a
#                                 a randomly generated nickname.
#                      TRAP     - Don't match against traps.
#                      PROXY    - Don't scan for open proxies.
#                      VERSION  - Don't check its CTCP VERSION reply.
#                      ALL      - All of the above.
# userhost pattern - A regex or cluster-style pattern to match against
#                    users' user@host fields.
# class pattern    - A regex or cluster-style pattern to match against
#                    users' class name fields.
# ====================================================================
E:ALL:*@*toast.pc
E:oomon@*
EC:SEEDRAND,TRAP:dronehunters
EC:friends

# Spoofers (don't kline spoofers with IPs matching the following)
F:192.168.*.*

# MOTD file - default is oomon-motd.txt
#M:oomon-motd.txt

# Log file - default is oomon.log
#G:oomon.log

# Help file - default is oomon.help
#H:oomon.help

# OOMon settings file - default is oomon.settings
#T:oomon.settings

# User settings file - default is oomon-users.db
#U:oomon-users.db

# Y-line descriptions go here (see .class command)
Y:1:Blah users
Y:2:Semi-blah users
Y:3:Users without lives
Y:5:Yeehaw
Y:20:Did I mention I'm bored?
Y:opers:IRC Operators
Y:users:Normal Users
Y:restricted:Restricted Users

